<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="3085px" height="1091px" version="1.1" content="&lt;mxfile userAgent=&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/604.5.6 (KHTML, like Gecko) Version/11.0.3 Safari/604.5.6&quot; version=&quot;8.4.2&quot; editor=&quot;www.draw.io&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;2be09ec3-591b-e72a-45f5-7d212b4ae1de&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs><clipPath id="mx-clip-444-883-372-74-0"><rect x="444" y="883" width="372" height="74"/></clipPath><clipPath id="mx-clip-444-965-372-112-0"><rect x="444" y="965" width="372" height="112"/></clipPath><clipPath id="mx-clip-984-877-402-104-0"><rect x="984" y="877" width="402" height="104"/></clipPath><clipPath id="mx-clip-984-989-402-82-0"><rect x="984" y="989" width="402" height="82"/></clipPath><clipPath id="mx-clip-1006-31-302-104-0"><rect x="1006" y="31" width="302" height="104"/></clipPath><clipPath id="mx-clip-1006-143-302-222-0"><rect x="1006" y="143" width="302" height="222"/></clipPath><clipPath id="mx-clip-1474-798-302-64-0"><rect x="1474" y="798" width="302" height="64"/></clipPath><clipPath id="mx-clip-1474-870-302-222-0"><rect x="1474" y="870" width="302" height="222"/></clipPath><clipPath id="mx-clip-1868-35-342-34-0"><rect x="1868" y="35" width="342" height="34"/></clipPath><clipPath id="mx-clip-1868-77-342-112-0"><rect x="1868" y="77" width="342" height="112"/></clipPath><clipPath id="mx-clip-1810-468-277-64-0"><rect x="1810" y="468" width="277" height="64"/></clipPath><clipPath id="mx-clip-1810-540-277-122-0"><rect x="1810" y="540" width="277" height="122"/></clipPath><clipPath id="mx-clip-2043-266-252-64-0"><rect x="2043" y="266" width="252" height="64"/></clipPath><clipPath id="mx-clip-2043-338-252-92-0"><rect x="2043" y="338" width="252" height="92"/></clipPath><clipPath id="mx-clip-1808-706-402-44-0"><rect x="1808" y="706" width="402" height="44"/></clipPath><clipPath id="mx-clip-1808-758-402-82-0"><rect x="1808" y="758" width="402" height="82"/></clipPath><clipPath id="mx-clip-479-562-302-54-0"><rect x="479" y="562" width="302" height="54"/></clipPath><clipPath id="mx-clip-479-624-302-112-0"><rect x="479" y="624" width="302" height="112"/></clipPath><clipPath id="mx-clip-1434-146-342-74-0"><rect x="1434" y="146" width="342" height="74"/></clipPath><clipPath id="mx-clip-1434-228-342-132-0"><rect x="1434" y="228" width="342" height="132"/></clipPath><clipPath id="mx-clip-4-64-332-64-0"><rect x="4" y="64" width="332" height="64"/></clipPath><clipPath id="mx-clip-4-136-332-142-0"><rect x="4" y="136" width="332" height="142"/></clipPath><clipPath id="mx-clip-571-31-312-64-0"><rect x="571" y="31" width="312" height="64"/></clipPath><clipPath id="mx-clip-571-103-312-142-0"><rect x="571" y="103" width="312" height="142"/></clipPath><clipPath id="mx-clip-484-417-312-24-0"><rect x="484" y="417" width="312" height="24"/></clipPath><clipPath id="mx-clip-484-449-312-62-0"><rect x="484" y="449" width="312" height="62"/></clipPath><clipPath id="mx-clip-824-421-312-34-0"><rect x="824" y="421" width="312" height="34"/></clipPath><clipPath id="mx-clip-824-463-312-82-0"><rect x="824" y="463" width="312" height="82"/></clipPath><clipPath id="mx-clip-2586-35-342-54-0"><rect x="2586" y="35" width="342" height="54"/></clipPath><clipPath id="mx-clip-2586-97-342-122-0"><rect x="2586" y="97" width="342" height="122"/></clipPath><clipPath id="mx-clip-2356-357-342-166-0"><rect x="2356" y="357" width="342" height="166"/></clipPath><clipPath id="mx-clip-2356-523-342-166-0"><rect x="2356" y="523" width="342" height="166"/></clipPath><clipPath id="mx-clip-2738-357-342-126-0"><rect x="2738" y="357" width="342" height="126"/></clipPath></defs><g transform="translate(0.5,0.5)"><rect x="439.5" y="852" width="380" height="220" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 439.5 878 L 439.5 852 L 819.5 852 L 819.5 878 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="628" y="869.5">SensorFusionApplication</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-444-883-372-74-0)" font-size="12px"><text x="445" y="895.5">- mExtendedKalmanFilter_: ExtendedKalmanFilter</text><text x="445" y="909.5">- mEstimations_: std::vector&lt;State&gt;</text><text x="445" y="923.5">- mGroundTruth: std::vector&lt;State&gt;</text><text x="445" y="937.5">- mCurrentRMSE_: Eigen::VectorXd</text></g><path d="M 439.5 956 L 819.5 956" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-444-965-372-112-0)" font-size="12px"><text x="445" y="977.5">+ SensorFusionApplication()</text><text x="445" y="991.5">+ ~SensorFusionApplication()</text><text x="445" y="1005.5">+ run(Measurement* currentMeasurement, </text><text x="445" y="1019.5">        GroundTruth* currentGroundtruth) : State*</text><text x="445" y="1033.5">- calculateRMSE(): Eigen::VectorXd</text><text x="445" y="1047.5">- getExtendedKalmanFilter() : ExtendedKalmanFilter&amp;</text></g><rect x="979.5" y="846" width="410" height="220" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 979.5 872 L 979.5 846 L 1389.5 846 L 1389.5 872 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1183" y="863.5">ExtendedKalmanFilter</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-984-877-402-104-0)" font-size="12px"><text x="985" y="889.5">- mKalmanFilter_: KalmanFilter</text><text x="985" y="903.5">- mIsInitialized_: bool</text><text x="985" y="917.5">- mPreviousTimestamp_ : long long</text><text x="985" y="931.5">- x_  : Eigen::VectorXd</text><text x="985" y="945.5">- P_  : Eigen::MatrixXd</text><text x="985" y="959.5">- Q_  : Eigen::MatrixXd</text><text x="985" y="973.5">- F_  : Eigen::MatrixXd</text></g><path d="M 979.5 980 L 1389.5 980" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-984-989-402-82-0)" font-size="12px"><text x="985" y="1001.5">+ ExtendedKalmanFilter()</text><text x="985" y="1015.5">+ ~ExtendedKalmanFilter()</text><text x="985" y="1029.5">+ processMeasurement(std::unique_ptr&lt;Measurement&gt; pMeasurement)</text><text x="985" y="1043.5">+ getPredictedState() const: State</text><text x="985" y="1057.5">+ computeDeltaT(long long pTimestamp): float</text></g><rect x="1002" y="0" width="310" height="360" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1002 26 L 1002 0 L 1312 0 L 1312 26 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1155.5" y="17.5">DataUtils::DataAdapter</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1006-31-302-104-0)" font-size="12px"><text x="1007.5" y="43.5">- mJSONData_ : nlohmann::son</text><text x="1007.5" y="57.5">- mDataStream_ : std::istringstream</text><text x="1007.5" y="71.5">- mMeasurement_ : std::unique_ptr&lt;Measurement&gt;</text><text x="1007.5" y="85.5">- mGroundTruth_ : std::unique_ptr&lt;State&gt;</text><text x="1007.5" y="99.5">- mIsLaser_: bool</text><text x="1007.5" y="113.5">- mDataType_:SensorDataTypes</text></g><path d="M 1002 134 L 1312 134" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1006-143-302-222-0)" font-size="12px"><text x="1007.5" y="155.5">+ DataAdapter(const nlohmann::son&amp; pJSONData)</text><text x="1007.5" y="169.5">+ ~DataAdapter()</text><text x="1007.5" y="183.5">+ isTelemetryData() const: bool</text><text x="1007.5" y="197.5">+ isLaser() const : bool</text><text x="1007.5" y="211.5">+ parseData()</text><text x="1007.5" y="225.5">+ getMeasurement() : std::unique_ptr&lt;Measurement&gt;</text><text x="1007.5" y="239.5">+ getGroundTruth() : std::unique_ptr&lt;State&gt;</text><text x="1007.5" y="253.5">+ getJSONFromPredictedState(</text><text x="1007.5" y="267.5">     const State&amp; currentPredictedState, </text><text x="1007.5" y="281.5">     const Eigen::VectorXd&amp; stateRMSE) : nlohmann::json</text><text x="1007.5" y="295.5">- parseMeasurementData()</text><text x="1007.5" y="309.5">- parseGroundTruthData()</text><text x="1007.5" y="323.5">- processLaserData() : bool</text><text x="1007.5" y="337.5">- processRadarData(): bool</text></g><rect x="1469.5" y="767" width="310" height="320" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1469.5 793 L 1469.5 767 L 1779.5 767 L 1779.5 793 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1623" y="784.5">KalmanFilter</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1474-798-302-64-0)" font-size="12px"><text x="1475" y="810.5">- x_  : Eigen::VectorXd</text><text x="1475" y="824.5">- P_  : Eigen::MatrixXd</text><text x="1475" y="838.5">- Q_  : Eigen::MatrixXd</text><text x="1475" y="852.5">- F_  : Eigen::MatrixXd</text></g><path d="M 1469.5 861 L 1779.5 861" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1474-870-302-222-0)" font-size="12px"><text x="1475" y="882.5">+ KalmanFilter()</text><text x="1475" y="896.5">+ ~KalmanFilter()</text><text x="1475" y="910.5">+ init(Eigen::MatrixXd&amp; P_, </text><text x="1475" y="924.5">         Eigen::MatrixXd&amp; Q_, </text><text x="1475" y="938.5">         Eigen::MatrixXd&amp; F_)</text><text x="1475" y="952.5">+ initState(size_t pDimensions)</text><text x="1475" y="966.5">+ setState(const State&amp; pState)</text><text x="1475" y="980.5">+ getState() const : Eigen::VectorXd&amp;</text><text x="1475" y="994.5">+ updateF(float dt) </text><text x="1475" y="1008.5">+ updateQ(float dt, float noise_ax, float noise_ay)</text><text x="1475" y="1022.5">+ predict()</text><text x="1475" y="1036.5">+ update(const Eigen::MatrixXd&amp; z, </text><text x="1475" y="1050.5">              const Eigen::MatrixXd &amp;H, </text><text x="1475" y="1064.5">              const Eigen::VectorXd&amp; Hx, </text><text x="1475" y="1078.5">              const Eigen::MatrixXd&amp; R)</text></g><rect x="1863.5" y="4" width="350" height="180" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1863.5 30 L 1863.5 4 L 2213.5 4 L 2213.5 30 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2037" y="21.5">Measurement</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1868-35-342-34-0)" font-size="12px"><text x="1869" y="47.5">- mTimestamp_ : long long</text><text x="1869" y="61.5">- mStateAdapterStrategy_ : StateAdapterStrategy*</text></g><path d="M 1863.5 68 L 2213.5 68" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1868-77-342-112-0)" font-size="12px"><text x="1869" y="89.5">+ virtual ~Measurement()</text><text x="1869" y="103.5">+ getTimestamp() const : long long</text><text x="1869" y="117.5">+ setStateAdapterStrategy(</text><text x="1869" y="131.5">        StateAdapterStrategy* pStrategy)</text><text x="1869" y="145.5">+ getStateAdapterStrategy() : StateAdapterStrategy*</text><text x="1869" y="159.5">+ virtual getStateData() const = 0 : State</text><text x="1869" y="173.5">+ virtual getVectorizedData() const  = 0: const Eigen::VectorXd</text></g><rect x="1806" y="437" width="285" height="220" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1806 463 L 1806 437 L 2091 437 L 2091 463 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1947" y="454.5">RadarMeasurement</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1810-468-277-64-0)" font-size="12px"><text x="1811.5" y="480.5">- mRho_ : float</text><text x="1811.5" y="494.5">- mTheta_ : float</text><text x="1811.5" y="508.5">- mRhoDot_ : float</text><text x="1811.5" y="522.5">- mInputDimensions_ : std::size_t</text></g><path d="M 1806 531 L 2091 531" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1810-540-277-122-0)" font-size="12px"><text x="1811.5" y="552.5">+ RadarMeasurement(long long pTimestamp, </text><text x="1811.5" y="566.5">    float pRho, </text><text x="1811.5" y="580.5">    float pTheta,</text><text x="1811.5" y="594.5">   float pRhoDot)</text><text x="1811.5" y="608.5">+ ~RadarMeasurement()</text><text x="1811.5" y="622.5">+ getStateData() const : State</text><text x="1811.5" y="636.5">+ getVectorizedData() const : const Eigen::VectorXd</text><text x="1811.5" y="650.5">+ getInputDimensions() const override : std::size_t</text></g><rect x="2038.5" y="235" width="260" height="190" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 2038.5 261 L 2038.5 235 L 2298.5 235 L 2298.5 261 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2167" y="252.5">LaserMeasurement</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2043-266-252-64-0)" font-size="12px"><text x="2044" y="278.5">- mPositionX_ : float</text><text x="2044" y="292.5">- mPositionY_ : float </text><text x="2044" y="306.5">- mInputDimensions_ : std:size_t</text></g><path d="M 2038.5 329 L 2298.5 329" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2043-338-252-92-0)" font-size="12px"><text x="2044" y="350.5">+ LaserMeasurement(long long pTimestamp,</text><text x="2044" y="364.5">     float pPositionX, </text><text x="2044" y="378.5">     float pPositionY)</text><text x="2044" y="392.5">+ ~LaserMeasurement()</text><text x="2044" y="406.5">+ getInputDimensions() const override : size_t</text></g><rect x="1803.5" y="675" width="410" height="160" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1803.5 701 L 1803.5 675 L 2213.5 675 L 2213.5 701 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2007" y="692.5">DataUtils::StateAdapterStrategyFactory</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1808-706-402-44-0)" font-size="12px"><text x="1809" y="718.5">- mSensorType_ : std::string</text><text x="1809" y="732.5">- mLaserStrategy_ : StateAdapterStrategy*</text><text x="1809" y="746.5">- mRadarStrategy_ : StateAdapterStrategy* </text></g><path d="M 1803.5 749 L 2213.5 749" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1808-758-402-82-0)" font-size="12px"><text x="1809" y="770.5">+ StateAdapterStrategy() </text><text x="1809" y="784.5">+ ~StateAdapterStrategy()</text><text x="1809" y="798.5">+ setSensorType(const std::string&amp; pSensorType) </text><text x="1809" y="812.5">+ getStateAdapterStrategy(const std::size_t pMeasurementDimensions):</text><text x="1809" y="826.5">     StateAdapterStrategy*</text></g><rect x="474.5" y="531" width="310" height="200" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 474.5 557 L 474.5 531 L 784.5 531 L 784.5 557 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="628" y="548.5">DataUtils::Utils</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-479-562-302-54-0)" font-size="12px"><text x="480" y="574.5">- mStartDelimiter_ : std::string</text><text x="480" y="588.5">- mEndDelimiter_ : std::string </text><text x="480" y="602.5">- mEOFDelimiter_ : std::string</text></g><path d="M 474.5 615 L 784.5 615" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-479-624-302-112-0)" font-size="12px"><text x="480" y="636.5">+ Utils( const std::string&amp; pStart,</text><text x="480" y="650.5">            const std::string&amp; pEnd,</text><text x="480" y="664.5">            const std::string&amp; pEOF)</text><text x="480" y="678.5">+ ~Utils()</text><text x="480" y="692.5">+ hasData() const : bool </text><text x="480" y="706.5">+ getData() : const std::string</text><text x="480" y="720.5">+ getDefaultString() : const std::string&amp; </text></g><rect x="1429.5" y="115" width="350" height="240" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1429.5 141 L 1429.5 115 L 1779.5 115 L 1779.5 141 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1603" y="132.5">State</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1434-146-342-74-0)" font-size="12px"><text x="1435" y="158.5">- mPositionX_ : float</text><text x="1435" y="172.5">- mPositionY_ : float</text><text x="1435" y="186.5">- mVelocityX_ : float</text><text x="1435" y="200.5">- mVelocityY_ : float</text><text x="1435" y="214.5">- mInputDimensions_ : std::size_t</text></g><path d="M 1429.5 219 L 1779.5 219" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1434-228-342-132-0)" font-size="12px"><text x="1435" y="240.5">+ State(float px, float py, float vx, float vy)</text><text x="1435" y="254.5">+ ~State()</text><text x="1435" y="268.5">+ getPositionX() const : const float</text><text x="1435" y="282.5">+ getPositionY() const : const float</text><text x="1435" y="296.5">+ getVelocityX() const : const float</text><text x="1435" y="310.5">+ getVelocityY() const : const float</text><text x="1435" y="324.5">+ diff (const State&amp; other) : Eigen::VectorXd</text><text x="1435" y="338.5">+ static getInputDimensions() : std::size_t</text></g><rect x="0" y="33" width="340" height="240" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 0 59 L 0 33 L 340 33 L 340 59 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="168.5" y="50.5">DataUtils::InputParser</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-64-332-64-0)" font-size="12px"><text x="5.5" y="76.5">-mSource_:std::string</text><text x="5.5" y="90.5">-mOutput_:std::string</text><text x="5.5" y="104.5">-mDataType:std::string</text><text x="5.5" y="118.5">-mIsParseSuccessful:bool</text></g><path d="M 0 127 L 340 127" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-136-332-142-0)" font-size="12px"><text x="5.5" y="148.5">+InputParser(const std::string&amp; defaultSource, </text><text x="5.5" y="162.5">                     const std::string&amp; defaultOutput)</text><text x="5.5" y="176.5">+~InputParser()</text><text x="5.5" y="190.5">+parseArgs(int args, char**argv): void</text><text x="5.5" y="204.5">+getOutput() const : const std::string&amp; </text><text x="5.5" y="218.5">+getSource() const : const std::string&amp; </text><text x="5.5" y="232.5">+getDataType() const : const std::string&amp; </text><text x="5.5" y="246.5">+isParseSuccessful() const :bool</text><text x="5.5" y="260.5">-showUsage(const std::string&amp; progrramName)</text></g><rect x="567" y="0" width="320" height="240" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 567 26 L 567 0 L 887 0 L 887 26 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="725.5" y="17.5">DataUtils::DataReader</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-571-31-312-64-0)" font-size="12px"><text x="572.5" y="43.5">-mOutputFileName_:std::string</text><text x="572.5" y="57.5">-mOutputDataStream_:std::of stream</text><text x="572.5" y="71.5">-mDataAdapter_:std::unique_ptr&lt;DataAdapter&gt;</text><text x="572.5" y="85.5">-mApplication_:std::unique_ptr&lt;SesnorFusionApplication&gt;</text></g><path d="M 567 94 L 887 94" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-571-103-312-142-0)" font-size="12px"><text x="572.5" y="115.5">+ DataResder(std::unique_ptr&lt;DataAdapter&gt;,</text><text x="572.5" y="129.5">                std::unique_ptr&lt;SensorFusionApplication&gt;)</text><text x="572.5" y="143.5">+ ~DataReader()</text><text x="572.5" y="157.5">+ setOutputFile(const std::string&amp; pFileName)</text><text x="572.5" y="171.5">+ getAdapter():DataAdapter*</text><text x="572.5" y="185.5">+ getApplication():SensorFusionApplication*</text><text x="572.5" y="199.5">+ virtual run() </text><text x="572.5" y="213.5">+ processData(const std::string&amp; pData): const State*</text><text x="572.5" y="227.5">+ writeResultsToFile(const State* pState)</text></g><path d="M 902.99 92 L 999.76 92" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 887.99 92 L 895.49 87.59 L 902.99 92 L 895.49 96.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 987.88 98.5 L 1000.88 92 L 987.88 85.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(888.5,74.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><rect x="479.5" y="386" width="320" height="120" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 479.5 412 L 479.5 386 L 799.5 386 L 799.5 412 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="638" y="403.5">DataUtils::WebClientReader</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-484-417-312-24-0)" font-size="12px"><text x="485" y="429.5">-mServerHub_ :uWS::Hub</text></g><path d="M 479.5 440 L 799.5 440" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 479.5 453 L 439.5 453 Q 429.5 453 429.5 463 L 429.5 665 Q 429.5 675 439.5 675.22 L 471.76 675.95" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 459.74 682.18 L 472.88 675.97 L 460.03 669.18" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(419.5,555.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="20" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Use</div></div></foreignObject><text x="10" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Use</text></switch></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-484-449-312-62-0)" font-size="12px"><text x="485" y="461.5">+ WebClientReader(std::unique_ptr&lt;DataAdapter&gt;,</text><text x="485" y="475.5">                std::unique_ptr&lt;SensorFusionApplication&gt;)</text><text x="485" y="489.5">+ ~WebClientReader()</text><text x="485" y="503.5">+ virtual run()</text></g><rect x="819.5" y="390" width="320" height="150" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 819.5 416 L 819.5 390 L 1139.5 390 L 1139.5 416 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="978" y="407.5">DataUtils::FileReader</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-824-421-312-34-0)" font-size="12px"><text x="825" y="433.5">-mFileName_:std::string</text><text x="825" y="447.5">-mFileReader_:std::if stream</text></g><path d="M 819.5 454 L 1139.5 454" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-824-463-312-82-0)" font-size="12px"><text x="825" y="475.5">+ FileReader(std::unique_ptr&lt;DataAdapter&gt;,</text><text x="825" y="489.5">                std::unique_ptr&lt;SensorFusionApplication&gt;)</text><text x="825" y="503.5">+ ~FileReader()</text><text x="825" y="517.5">+ setSource(const std::string&amp; pFileName) </text><text x="825" y="531.5">+ virtual run()</text></g><path d="M 570 168.01 L 570 169.01 Q 570 170 560 170 L 410 170 Q 400 170 400 180 L 400 794 Q 400 804 410 804 L 620 804 Q 630 804 630 814 L 630 849.76" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 570 183.01 L 565.59 175.51 L 570 168.01 L 574.41 175.51 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 623.5 837.88 L 630 850.88 L 636.5 837.88" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(568.5,169.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 640 386 L 725.95 257.08" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 735.38 242.93 L 733.02 261.79 L 718.88 252.36 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(667.5,308.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="40" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Extends</div></div></foreignObject><text x="20" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Extends</text></switch></g><path d="M 980 390 L 784.54 244.8" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 770.9 234.67 L 789.61 237.98 L 779.48 251.63 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(855.5,306.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="40" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Extends</div></div></foreignObject><text x="20" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Extends</text></switch></g><rect x="2581.5" y="4" width="350" height="210" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 2581.5 30 L 2581.5 4 L 2931.5 4 L 2931.5 30 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2755" y="21.5">StateAdapterStrategy</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2586-35-342-54-0)" font-size="12px"><text x="2587" y="47.5">- mMeasurementDimensions_ : std::size_t</text><text x="2587" y="61.5">- mH_ : Eigen::MatrixXd </text><text x="2587" y="75.5">- mR_ : Eigen::MatrixXd </text></g><path d="M 2581.5 88 L 2931.5 88" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2586-97-342-122-0)" font-size="12px"><text x="2587" y="109.5">+ StateAdapterStrategy(const std::size_t pMeasurementDims)</text><text x="2587" y="123.5">+ virtual ~StateAdapterStrategy()</text><text x="2587" y="137.5">+ virtual computeEstimatedState(const Eigen::VectorXd&amp; </text><text x="2587" y="151.5">             currentPredictedState) = 0: Eigen::MatrixXd</text><text x="2587" y="165.5">+ virtual getMeasurementFunction( const Eigen::VectorXd&amp; </text><text x="2587" y="179.5">             currentPredictedState) = 0 : Eigen::VectorXd</text><text x="2587" y="193.5">+ virtual getMeasurementCovariance() const = 0 :</text><text x="2587" y="207.5">     const Eigen::MatrixXd&amp; </text></g><rect x="2351.5" y="318" width="350" height="366" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 2351.5 344 L 2351.5 318 L 2701.5 318 L 2701.5 344 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2525" y="335.5">RadarStateAdapterStrategy</text></g><path d="M 2351.5 348 L 2701.5 348" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2356-357-342-166-0)" font-size="12px"><text x="2357" y="369.5">+ RadarStateAdapterStrategy(const std::size_t pDims)</text><text x="2357" y="383.5">+ ~RadarStateAdapterStrategy()</text><text x="2357" y="397.5">+ computeEstimatedState(const Eigen::VectorXd&amp; </text><text x="2357" y="411.5">             currentPredictedState) = 0: Eigen::MatrixXd</text><text x="2357" y="425.5">+ getMeasurementFunction( const Eigen::VectorXd&amp; </text><text x="2357" y="439.5">             currentPredictedState) = 0 : Eigen::VectorXd</text><text x="2357" y="453.5">+ getMeasurementCovariance() const = 0 :</text><text x="2357" y="467.5">     const Eigen::MatrixXd&amp; </text><text x="2357" y="481.5">- calculateJacobian(const Eigen::VectorXd&amp; pState)</text><text x="2357" y="495.5">- convertCartesianToPolarCoordinates(const Eigen::VectorXd&amp; ):</text><text x="2357" y="509.5">     Eigen::VectorXd</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2356-523-342-166-0)" font-size="12px"><text x="2357" y="535.5">+ RadarStateAdapterStrategy(const std::size_t pDims)</text><text x="2357" y="549.5">+ ~RadarStateAdapterStrategy()</text><text x="2357" y="563.5">+ computeEstimatedState(const Eigen::VectorXd&amp; </text><text x="2357" y="577.5">             currentPredictedState) = 0: Eigen::MatrixXd</text><text x="2357" y="591.5">+ getMeasurementFunction( const Eigen::VectorXd&amp; </text><text x="2357" y="605.5">             currentPredictedState) = 0 : Eigen::VectorXd</text><text x="2357" y="619.5">+ getMeasurementCovariance() const = 0 :</text><text x="2357" y="633.5">     const Eigen::MatrixXd&amp; </text><text x="2357" y="647.5">- calculateJacobian(const Eigen::VectorXd&amp; pState)</text><text x="2357" y="661.5">- convertCartesianToPolarCoordinates(const Eigen::VectorXd&amp; ):</text><text x="2357" y="675.5">     Eigen::VectorXd</text></g><rect x="2733.5" y="318" width="350" height="160" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 2733.5 344 L 2733.5 318 L 3083.5 318 L 3083.5 344 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2907" y="335.5">LaserStateAdapterStrategy</text></g><path d="M 2733.5 348 L 3083.5 348" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2738-357-342-126-0)" font-size="12px"><text x="2739" y="369.5">+  LaserStateAdapterStrategy(const std::size_t pDims)</text><text x="2739" y="383.5">+ ~LaserStateAdapterStrategy()</text><text x="2739" y="397.5">+ computeEstimatedState(const Eigen::VectorXd&amp; </text><text x="2739" y="411.5">             currentPredictedState) = 0: Eigen::MatrixXd</text><text x="2739" y="425.5">+ getMeasurementFunction( const Eigen::VectorXd&amp; </text><text x="2739" y="439.5">             currentPredictedState) = 0 : Eigen::VectorXd</text><text x="2739" y="453.5">+ getMeasurementCovariance() const = 0 :</text><text x="2739" y="467.5">     const Eigen::MatrixXd&amp; </text></g><path d="M 2526 318 L 2701.86 228.24" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2717 220.51 L 2705.73 235.81 L 2698 220.67 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2601.5,262.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="40" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Extends</div></div></foreignObject><text x="20" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Extends</text></switch></g><path d="M 2908 318 L 2777.04 230.1" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2762.93 220.62 L 2781.78 223.04 L 2772.31 237.16 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2814.5,262.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="40" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Extends</div></div></foreignObject><text x="20" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Extends</text></switch></g><path d="M 1200 368 L 1199.51 743 Q 1199.5 753 1209.5 753.02 L 1801.76 754" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1789.87 760.48 L 1802.88 754 L 1789.89 747.48" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(1297.5,747.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="20" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Use</div></div></foreignObject><text x="10" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Use</text></switch></g><path d="M 2229.99 724 L 2264 724 Q 2274 724 2274 714 L 2274 446 Q 2274 436 2284 436 L 2349.76 436" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2214.99 724 L 2222.49 719.59 L 2229.99 724 L 2222.49 728.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2337.88 442.5 L 2350.88 436 L 2337.88 429.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2215.5,706.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 2214 809.99 L 2214 802.99 Q 2214 796 2224 796 L 2294 796 Q 2304 796 2304 786 L 2304 734 Q 2304 724 2314 724 L 2878 724 Q 2888 724 2888 714 L 2888 484.24" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2214 794.99 L 2218.41 802.49 L 2214 809.99 L 2209.59 802.49 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2894.5 496.12 L 2888 483.12 L 2881.5 496.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2218.5,779.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 1948 438 L 2009.48 199.54" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2013.72 183.08 L 2017.71 201.67 L 2001.25 197.42 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(1960.5,304.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="40" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Extends</div></div></foreignObject><text x="20" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Extends</text></switch></g><path d="M 2168 236 L 2030.64 188.88" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2014.56 183.36 L 2033.4 180.84 L 2027.88 196.92 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2069.5,203.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="40" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Extends</div></div></foreignObject><text x="20" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Extends</text></switch></g><path d="M 2229.49 73.09 L 2388 73.95 Q 2398 74 2398 66 L 2398 62 Q 2398 58 2408 58 L 2579.76 58" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2214.49 73.01 L 2222.01 68.63 L 2229.49 73.09 L 2221.96 77.46 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2567.88 64.5 L 2580.88 58 L 2567.88 51.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2215.5,55.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 1327.99 78 L 1578 78 Q 1588 78 1588 68 L 1588 58 Q 1588 48 1598 48 L 1861.76 48" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1312.99 78 L 1320.49 73.59 L 1327.99 78 L 1320.49 82.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1849.88 54.5 L 1862.88 48 L 1849.88 41.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(1313.5,60.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 1327.99 249 L 1427.26 249" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1312.99 249 L 1320.49 244.59 L 1327.99 249 L 1320.49 253.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1415.38 255.5 L 1428.38 249 L 1415.38 242.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(1313.5,231.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 1866 116 L 1829.5 115.22 Q 1819.5 115 1819.5 125 L 1819.5 279 Q 1819.5 289 1809.5 289.25 L 1782.24 289.94" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1793.95 283.14 L 1781.12 289.97 L 1794.28 296.14" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(1809.5,192.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="20" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Use</div></div></foreignObject><text x="10" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Use</text></switch></g><path d="M 837.99 976 L 920 976 Q 930 976 930 966 L 930 924 Q 930 914 940 914 L 972 914 Q 982 914 982 914.12 L 982 914.24" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 822.99 976 L 830.49 971.59 L 837.99 976 L 830.49 980.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 988.5 926.12 L 982 913.12 L 975.5 926.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(823.5,958.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 835.99 916 L 900 916 Q 910 916 910 906 L 910 794 Q 910 784 920 784 L 1360 784 Q 1370 784 1370 774 L 1370 300 Q 1370 290 1380 290 L 1427.76 290" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 820.99 916 L 828.49 911.59 L 835.99 916 L 828.49 920.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1415.88 296.5 L 1428.88 290 L 1415.88 283.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(821.5,898.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">n</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">n</text></switch></g><path d="M 1409.99 988 L 1420 988 Q 1430 988 1430 978 L 1430 836 Q 1430 826 1440 826 L 1467.76 826" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1394.99 988 L 1402.49 983.59 L 1409.99 988 L 1402.49 992.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455.88 832.5 L 1468.88 826 L 1455.88 819.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(1395.5,970.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g></g></svg>