<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1658px" height="1049px" version="1.1" content="&lt;mxfile userAgent=&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/604.5.6 (KHTML, like Gecko) Version/11.0.3 Safari/604.5.6&quot; version=&quot;8.4.2&quot; editor=&quot;www.draw.io&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;2be09ec3-591b-e72a-45f5-7d212b4ae1de&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs><clipPath id="mx-clip-67-31-372-24-0"><rect x="67" y="31" width="372" height="24"/></clipPath><clipPath id="mx-clip-67-63-372-162-0"><rect x="67" y="63" width="372" height="162"/></clipPath><clipPath id="mx-clip-47-300-402-104-0"><rect x="47" y="300" width="402" height="104"/></clipPath><clipPath id="mx-clip-47-412-402-82-0"><rect x="47" y="412" width="402" height="82"/></clipPath><clipPath id="mx-clip-67-532-302-34-0"><rect x="67" y="532" width="302" height="34"/></clipPath><clipPath id="mx-clip-67-574-302-62-0"><rect x="67" y="574" width="302" height="62"/></clipPath><clipPath id="mx-clip-67-700-302-84-0"><rect x="67" y="700" width="302" height="84"/></clipPath><clipPath id="mx-clip-67-792-302-182-0"><rect x="67" y="792" width="302" height="182"/></clipPath><clipPath id="mx-clip-482-314-302-64-0"><rect x="482" y="314" width="302" height="64"/></clipPath><clipPath id="mx-clip-482-386-302-222-0"><rect x="482" y="386" width="302" height="222"/></clipPath><clipPath id="mx-clip-897-46-342-34-0"><rect x="897" y="46" width="342" height="34"/></clipPath><clipPath id="mx-clip-897-88-342-112-0"><rect x="897" y="88" width="342" height="112"/></clipPath><clipPath id="mx-clip-897-251-277-64-0"><rect x="897" y="251" width="277" height="64"/></clipPath><clipPath id="mx-clip-897-323-277-122-0"><rect x="897" y="323" width="277" height="122"/></clipPath><clipPath id="mx-clip-907-498-252-64-0"><rect x="907" y="498" width="252" height="64"/></clipPath><clipPath id="mx-clip-907-570-252-92-0"><rect x="907" y="570" width="252" height="92"/></clipPath><clipPath id="mx-clip-1282-46-342-54-0"><rect x="1282" y="46" width="342" height="54"/></clipPath><clipPath id="mx-clip-1282-108-342-122-0"><rect x="1282" y="108" width="342" height="122"/></clipPath><clipPath id="mx-clip-1282-282-342-166-0"><rect x="1282" y="282" width="342" height="166"/></clipPath><clipPath id="mx-clip-1282-506-342-126-0"><rect x="1282" y="506" width="342" height="126"/></clipPath><clipPath id="mx-clip-427-881-402-44-0"><rect x="427" y="881" width="402" height="44"/></clipPath><clipPath id="mx-clip-427-933-402-82-0"><rect x="427" y="933" width="402" height="82"/></clipPath><clipPath id="mx-clip-467-654-302-54-0"><rect x="467" y="654" width="302" height="54"/></clipPath><clipPath id="mx-clip-467-716-302-112-0"><rect x="467" y="716" width="302" height="112"/></clipPath><clipPath id="mx-clip-487-57-342-74-0"><rect x="487" y="57" width="342" height="74"/></clipPath><clipPath id="mx-clip-487-139-342-132-0"><rect x="487" y="139" width="342" height="132"/></clipPath></defs><g transform="translate(0.5,0.5)"><rect x="63" y="0" width="380" height="220" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 63 26 L 63 0 L 443 0 L 443 26 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="251.5" y="17.5">SensorFusionApplication</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-67-31-372-24-0)" font-size="12px"><text x="68.5" y="43.5">- mExtendedKalmanFilter_: ExtendedKalmanFilter</text></g><path d="M 63 54 L 443 54" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-67-63-372-162-0)" font-size="12px"><text x="68.5" y="75.5">+ SensorFusionApplication()</text><text x="68.5" y="89.5">+ ~SensorFusionApplication()</text><text x="68.5" y="103.5">+ configureDataSource(const DataReader&amp; pReader)</text><text x="68.5" y="117.5">+ run()</text><text x="68.5" y="131.5">- runKalmanFilter(std::vector&lt;State&gt;&amp; estimations, </text><text x="68.5" y="145.5">                             std::vector&lt;State&gt;&amp; groundTruth): std::string</text><text x="68.5" y="159.5">- calculateRMSE(const std::vector&lt;State&gt;&amp; estimations, </text><text x="68.5" y="173.5">                            std::vector&lt;State&gt;&amp; groundTruth): Eigen::VectorXd</text><text x="68.5" y="187.5">- getExtendedKalmanFilter() : ExtendedKalmanFilter&amp;</text></g><rect x="43" y="269" width="410" height="220" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 43 295 L 43 269 L 453 269 L 453 295 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="246.5" y="286.5">ExtendedKalmanFilter</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-47-300-402-104-0)" font-size="12px"><text x="48.5" y="312.5">- mKalmanFilter_: KalmanFilter</text><text x="48.5" y="326.5">- mIsInitialized_: bool</text><text x="48.5" y="340.5">- mPreviousTimestamp_ : long long</text><text x="48.5" y="354.5">- x_  : Eigen::VectorXd</text><text x="48.5" y="368.5">- P_  : Eigen::MatrixXd</text><text x="48.5" y="382.5">- Q_  : Eigen::MatrixXd</text><text x="48.5" y="396.5">- F_  : Eigen::MatrixXd</text></g><path d="M 43 403 L 453 403" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-47-412-402-82-0)" font-size="12px"><text x="48.5" y="424.5">+ ExtendedKalmanFilter()</text><text x="48.5" y="438.5">+ ~ExtendedKalmanFilter()</text><text x="48.5" y="452.5">+ processMeasurement(std::unique_ptr&lt;Measurement&gt; pMeasurement)</text><text x="48.5" y="466.5">+ getPredictedState() const: State</text><text x="48.5" y="480.5">+ computeDeltaT(long long pTimestamp): float</text></g><rect x="63" y="501" width="310" height="130" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 63 527 L 63 501 L 373 501 L 373 527 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="216.5" y="518.5">DataUtils::DataParser</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-67-532-302-34-0)" font-size="12px"><text x="68.5" y="544.5">- mData_ : std::string</text><text x="68.5" y="558.5">- mLength_ : std::size_t</text></g><path d="M 63 565 L 373 565" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-67-574-302-62-0)" font-size="12px"><text x="68.5" y="586.5">+ DataParser(const char* pData, const size_t pLength)</text><text x="68.5" y="600.5">+ ~DataParser()</text><text x="68.5" y="614.5">+ canParse() : bool </text><text x="68.5" y="628.5">+ parse() : nlohmann::json</text></g><rect x="63" y="669" width="310" height="300" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 63 695 L 63 669 L 373 669 L 373 695 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="216.5" y="686.5">DataUtils::DataAdapter</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-67-700-302-84-0)" font-size="12px"><text x="68.5" y="712.5">- mJSONData_ : nlohmann::son</text><text x="68.5" y="726.5">- mDataStream_ : std::istringstream</text><text x="68.5" y="740.5">- mMeasurement_ : std::unique_ptr&lt;Measurement&gt;</text><text x="68.5" y="754.5">- mGroundTruth_ : std::unique_ptr&lt;State&gt;</text><text x="68.5" y="768.5">- mIsLaser_: bool</text></g><path d="M 63 783 L 373 783" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-67-792-302-182-0)" font-size="12px"><text x="68.5" y="804.5">+ DataAdapter(const nlohmann::son&amp; pJSONData)</text><text x="68.5" y="818.5">+ ~DataAdapter()</text><text x="68.5" y="832.5">+ isTelemetryData() const: bool</text><text x="68.5" y="846.5">+ isLaser() const : bool</text><text x="68.5" y="860.5">+ parseData()</text><text x="68.5" y="874.5">+ getMeasurement() : std::unique_ptr&lt;Measurement&gt;</text><text x="68.5" y="888.5">+ getGroundTruth() : std::unique_ptr&lt;State&gt;</text><text x="68.5" y="902.5">+ getJSONFromPredictedState(</text><text x="68.5" y="916.5">     const State&amp; currentPredictedState, </text><text x="68.5" y="930.5">     const Eigen::VectorXd&amp; stateRMSE) : nlohmann::json</text><text x="68.5" y="944.5">- parseMeasurementData()</text><text x="68.5" y="958.5">- parseGroundTruthData()</text></g><rect x="478" y="283" width="310" height="320" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 478 309 L 478 283 L 788 283 L 788 309 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="631.5" y="300.5">KalmanFilter</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-482-314-302-64-0)" font-size="12px"><text x="483.5" y="326.5">- x_  : Eigen::VectorXd</text><text x="483.5" y="340.5">- P_  : Eigen::MatrixXd</text><text x="483.5" y="354.5">- Q_  : Eigen::MatrixXd</text><text x="483.5" y="368.5">- F_  : Eigen::MatrixXd</text></g><path d="M 478 377 L 788 377" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-482-386-302-222-0)" font-size="12px"><text x="483.5" y="398.5">+ KalmanFilter()</text><text x="483.5" y="412.5">+ ~KalmanFilter()</text><text x="483.5" y="426.5">+ init(Eigen::MatrixXd&amp; P_, </text><text x="483.5" y="440.5">         Eigen::MatrixXd&amp; Q_, </text><text x="483.5" y="454.5">         Eigen::MatrixXd&amp; F_)</text><text x="483.5" y="468.5">+ initState(size_t pDimensions)</text><text x="483.5" y="482.5">+ setState(const State&amp; pState)</text><text x="483.5" y="496.5">+ getState() const : Eigen::VectorXd&amp;</text><text x="483.5" y="510.5">+ updateF(float dt) </text><text x="483.5" y="524.5">+ updateQ(float dt, float noise_ax, float noise_ay)</text><text x="483.5" y="538.5">+ predict()</text><text x="483.5" y="552.5">+ update(const Eigen::MatrixXd&amp; z, </text><text x="483.5" y="566.5">              const Eigen::MatrixXd &amp;H, </text><text x="483.5" y="580.5">              const Eigen::VectorXd&amp; Hx, </text><text x="483.5" y="594.5">              const Eigen::MatrixXd&amp; R)</text></g><rect x="893" y="15" width="350" height="180" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 893 41 L 893 15 L 1243 15 L 1243 41 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1066.5" y="32.5">Measurement</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-897-46-342-34-0)" font-size="12px"><text x="898.5" y="58.5">- mTimestamp_ : long long</text><text x="898.5" y="72.5">- mStateAdapterStrategy_ : StateAdapterStrategy*</text></g><path d="M 893 79 L 1243 79" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-897-88-342-112-0)" font-size="12px"><text x="898.5" y="100.5">+ virtual ~Measurement()</text><text x="898.5" y="114.5">+ getTimestamp() const : long long</text><text x="898.5" y="128.5">+ setStateAdapterStrategy(</text><text x="898.5" y="142.5">        StateAdapterStrategy* pStrategy)</text><text x="898.5" y="156.5">+ getStateAdapterStrategy() : StateAdapterStrategy*</text><text x="898.5" y="170.5">+ virtual getStateData() const = 0 : State</text><text x="898.5" y="184.5">+ virtual getVectorizedData() const  = 0: const Eigen::VectorXd</text></g><rect x="893" y="220" width="285" height="220" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 893 246 L 893 220 L 1178 220 L 1178 246 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1034" y="237.5">RadarMeasurement</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-897-251-277-64-0)" font-size="12px"><text x="898.5" y="263.5">- mRho_ : float</text><text x="898.5" y="277.5">- mTheta_ : float</text><text x="898.5" y="291.5">- mRhoDot_ : float</text><text x="898.5" y="305.5">- mInputDimensions_ : std::size_t</text></g><path d="M 893 314 L 1178 314" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-897-323-277-122-0)" font-size="12px"><text x="898.5" y="335.5">+ RadarMeasurement(long long pTimestamp, </text><text x="898.5" y="349.5">    float pRho, </text><text x="898.5" y="363.5">    float pTheta,</text><text x="898.5" y="377.5">   float pRhoDot)</text><text x="898.5" y="391.5">+ ~RadarMeasurement()</text><text x="898.5" y="405.5">+ getStateData() const : State</text><text x="898.5" y="419.5">+ getVectorizedData() const : const Eigen::VectorXd</text><text x="898.5" y="433.5">+ getInputDimensions() const override : std::size_t</text></g><rect x="903" y="467" width="260" height="190" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 903 493 L 903 467 L 1163 467 L 1163 493 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1031.5" y="484.5">LaserMeasurement</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-907-498-252-64-0)" font-size="12px"><text x="908.5" y="510.5">- mPositionX_ : float</text><text x="908.5" y="524.5">- mPositionY_ : float </text><text x="908.5" y="538.5">- mInputDimensions_ : std:size_t</text></g><path d="M 903 561 L 1163 561" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-907-570-252-92-0)" font-size="12px"><text x="908.5" y="582.5">+ LaserMeasurement(long long pTimestamp,</text><text x="908.5" y="596.5">     float pPositionX, </text><text x="908.5" y="610.5">     float pPositionY)</text><text x="908.5" y="624.5">+ ~LaserMeasurement()</text><text x="908.5" y="638.5">+ getInputDimensions() const override : size_t</text></g><rect x="1278" y="15" width="350" height="210" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1278 41 L 1278 15 L 1628 15 L 1628 41 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1451.5" y="32.5">StateAdapterStrategy</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1282-46-342-54-0)" font-size="12px"><text x="1283.5" y="58.5">- mMeasurementDimensions_ : std::size_t</text><text x="1283.5" y="72.5">- mH_ : Eigen::MatrixXd </text><text x="1283.5" y="86.5">- mR_ : Eigen::MatrixXd </text></g><path d="M 1278 99 L 1628 99" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1282-108-342-122-0)" font-size="12px"><text x="1283.5" y="120.5">+ StateAdapterStrategy(const std::size_t pMeasurementDims)</text><text x="1283.5" y="134.5">+ virtual ~StateAdapterStrategy()</text><text x="1283.5" y="148.5">+ virtual computeEstimatedState(const Eigen::VectorXd&amp; </text><text x="1283.5" y="162.5">             currentPredictedState) = 0: Eigen::MatrixXd</text><text x="1283.5" y="176.5">+ virtual getMeasurementFunction( const Eigen::VectorXd&amp; </text><text x="1283.5" y="190.5">             currentPredictedState) = 0 : Eigen::VectorXd</text><text x="1283.5" y="204.5">+ virtual getMeasurementCovariance() const = 0 :</text><text x="1283.5" y="218.5">     const Eigen::MatrixXd&amp; </text></g><rect x="1278" y="243" width="350" height="200" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1278 269 L 1278 243 L 1628 243 L 1628 269 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1451.5" y="260.5">RadarStateAdapterStrategy</text></g><path d="M 1278 273 L 1628 273" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1282-282-342-166-0)" font-size="12px"><text x="1283.5" y="294.5">+ RadarStateAdapterStrategy(const std::size_t pDims)</text><text x="1283.5" y="308.5">+ ~RadarStateAdapterStrategy()</text><text x="1283.5" y="322.5">+ computeEstimatedState(const Eigen::VectorXd&amp; </text><text x="1283.5" y="336.5">             currentPredictedState) = 0: Eigen::MatrixXd</text><text x="1283.5" y="350.5">+ getMeasurementFunction( const Eigen::VectorXd&amp; </text><text x="1283.5" y="364.5">             currentPredictedState) = 0 : Eigen::VectorXd</text><text x="1283.5" y="378.5">+ getMeasurementCovariance() const = 0 :</text><text x="1283.5" y="392.5">     const Eigen::MatrixXd&amp; </text><text x="1283.5" y="406.5">- calculateJacobian(const Eigen::VectorXd&amp; pState)</text><text x="1283.5" y="420.5">- convertCartesianToPolarCoordinates(const Eigen::VectorXd&amp; ):</text><text x="1283.5" y="434.5">     Eigen::VectorXd</text></g><rect x="1278" y="467" width="350" height="160" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1278 493 L 1278 467 L 1628 467 L 1628 493 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1451.5" y="484.5">LaserStateAdapterStrategy</text></g><path d="M 1278 497 L 1628 497" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1282-506-342-126-0)" font-size="12px"><text x="1283.5" y="518.5">+  LaserStateAdapterStrategy(const std::size_t pDims)</text><text x="1283.5" y="532.5">+ ~LaserStateAdapterStrategy()</text><text x="1283.5" y="546.5">+ computeEstimatedState(const Eigen::VectorXd&amp; </text><text x="1283.5" y="560.5">             currentPredictedState) = 0: Eigen::MatrixXd</text><text x="1283.5" y="574.5">+ getMeasurementFunction( const Eigen::VectorXd&amp; </text><text x="1283.5" y="588.5">             currentPredictedState) = 0 : Eigen::VectorXd</text><text x="1283.5" y="602.5">+ getMeasurementCovariance() const = 0 :</text><text x="1283.5" y="616.5">     const Eigen::MatrixXd&amp; </text></g><rect x="423" y="850" width="410" height="160" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 423 876 L 423 850 L 833 850 L 833 876 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="626.5" y="867.5">DataUtils::StateAdapterStrategyFactory</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-427-881-402-44-0)" font-size="12px"><text x="428.5" y="893.5">- mSensorType_ : std::string</text><text x="428.5" y="907.5">- mLaserStrategy_ : StateAdapterStrategy*</text><text x="428.5" y="921.5">- mRadarStrategy_ : StateAdapterStrategy* </text></g><path d="M 423 924 L 833 924" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-427-933-402-82-0)" font-size="12px"><text x="428.5" y="945.5">+ StateAdapterStrategy() </text><text x="428.5" y="959.5">+ ~StateAdapterStrategy()</text><text x="428.5" y="973.5">+ setSensorType(const std::string&amp; pSensorType) </text><text x="428.5" y="987.5">+ getStateAdapterStrategy(const std::size_t pMeasurementDimensions):</text><text x="428.5" y="1001.5">     StateAdapterStrategy*</text></g><rect x="463" y="623" width="310" height="200" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 463 649 L 463 623 L 773 623 L 773 649 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="616.5" y="640.5">DataUtils::Utils</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-467-654-302-54-0)" font-size="12px"><text x="468.5" y="666.5">- mStartDelimiter_ : std::string</text><text x="468.5" y="680.5">- mEndDelimiter_ : std::string </text><text x="468.5" y="694.5">- mEOFDelimiter_ : std::string</text></g><path d="M 463 707 L 773 707" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-467-716-302-112-0)" font-size="12px"><text x="468.5" y="728.5">+ Utils( const std::string&amp; pStart,</text><text x="468.5" y="742.5">            const std::string&amp; pEnd,</text><text x="468.5" y="756.5">            const std::string&amp; pEOF)</text><text x="468.5" y="770.5">+ ~Utils()</text><text x="468.5" y="784.5">+ hasData() const : bool </text><text x="468.5" y="798.5">+ getData() : const std::string</text><text x="468.5" y="812.5">+ getDefaultString() : const std::string&amp; </text></g><path d="M 64 140 L 22.85 147.26 Q 13 149 13 159 L 13 560 Q 13 570 22.99 569.59 L 59.77 568.09" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 48.16 575.07 L 60.88 568.05 L 47.63 562.08" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(7.5,388.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="20" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Use</div></div></foreignObject><text x="10" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Use</text></switch></g><path d="M 63 150 L 32.76 156.8 Q 23 159 23 169 L 23 400 Q 23 410 23 420 L 23 520 Q 23 530 23 540 L 23 727 Q 23 737 33 737.24 L 61.76 737.95" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 49.73 744.15 L 62.88 737.97 L 50.04 731.16" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(6.5,416.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="20" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Use</div></div></foreignObject><text x="10" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Use</text></switch></g><path d="M 374 570 L 462.55 674.3" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 449.91 669.44 L 463.28 675.15 L 459.82 661.03" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(408.5,617.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="20" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Use</div></div></foreignObject><text x="10" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Use</text></switch></g><path d="M 374 780 L 423.13 895.94" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 412.51 887.54 L 423.56 896.97 L 424.48 882.46" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(388.5,832.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="20" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Use</div></div></foreignObject><text x="10" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Use</text></switch></g><path d="M 248 235.99 L 248 266.76" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 248 220.99 L 252.41 228.49 L 248 235.99 L 243.59 228.49 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 241.5 254.88 L 248 267.88 L 254.5 254.88" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(252.5,205.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 350 254.01 L 350 240 Q 350 230 351 230 L 351.5 230 Q 352 230 362 230 L 479.76 230" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 350 269.01 L 345.59 261.51 L 350 254.01 L 354.41 261.51 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 467.88 236.5 L 480.88 230 L 467.88 223.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(390.5,225.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 459.99 140 L 461.99 140 Q 464 140 464 150 L 464 190 Q 464 200 472.38 200 L 480.76 200" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 444.99 140 L 452.49 135.59 L 459.99 140 L 452.49 144.41 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 468.88 206.5 L 481.88 200 L 468.88 193.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(477.5,166.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="4" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">*</div></div></foreignObject><text x="2" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">*</text></switch></g><rect x="483" y="26" width="350" height="240" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 483 52 L 483 26 L 833 26 L 833 52 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="656.5" y="43.5">State</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-487-57-342-74-0)" font-size="12px"><text x="488.5" y="69.5">- mPositionX_ : float</text><text x="488.5" y="83.5">- mPositionY_ : float</text><text x="488.5" y="97.5">- mVelocityX_ : float</text><text x="488.5" y="111.5">- mVelocityY_ : float</text><text x="488.5" y="125.5">- mInputDimensions_ : std::size_t</text></g><path d="M 483 130 L 833 130" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-487-139-342-132-0)" font-size="12px"><text x="488.5" y="151.5">+ State(float px, float py, float vx, float vy)</text><text x="488.5" y="165.5">+ ~State()</text><text x="488.5" y="179.5">+ getPositionX() const : const float</text><text x="488.5" y="193.5">+ getPositionY() const : const float</text><text x="488.5" y="207.5">+ getVelocityX() const : const float</text><text x="488.5" y="221.5">+ getVelocityY() const : const float</text><text x="488.5" y="235.5">+ diff (const State&amp; other) : Eigen::VectorXd</text><text x="488.5" y="249.5">+ static getInputDimensions() : std::size_t</text></g><path d="M 458.99 96 L 463.49 96 Q 468 96 468 86 L 468 30 Q 468 20 478 20 L 858 20 Q 868 20 868 30 L 868 112 Q 868 122 878 122 L 893.76 122" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 443.99 96 L 451.49 91.59 L 458.99 96 L 451.49 100.41 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 881.88 128.5 L 894.88 122 L 881.88 115.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(888.5,96.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="4" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">*</div></div></foreignObject><text x="2" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">*</text></switch></g><path d="M 1259.99 104 L 1258.99 104 Q 1258 104 1258 94 L 1258 78 Q 1258 68 1266.88 68 L 1275.76 68" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1244.99 104 L 1252.49 99.59 L 1259.99 104 L 1252.49 108.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1263.88 74.5 L 1276.88 68 L 1263.88 61.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(1257.5,128.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 898 620 L 878 620 Q 868 620 868 610 L 868 170 Q 868 160 878 160 L 883 160 Q 888 160 888 161 L 888 161.5 Q 888 162 891 162 L 892.5 162 Q 894 162 894 165.06 L 894 168.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 894 161.12 L 897.5 168.12 L 890.5 168.12 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(899.5,626.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="28" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">name</div></div></foreignObject><text x="14" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">name</text></switch></g><g transform="translate(899.5,606.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="10" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="10" fill="#000000" text-anchor="middle" font-size="10px" font-family="Helvetica">1</text></switch></g><path d="M 894 380 L 886 380 Q 878 380 878 370 L 878 190 Q 878 180 881.94 180 L 885.88 180" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 892.88 180 L 885.88 183.5 L 885.88 176.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(895.5,386.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="28" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">name</div></div></foreignObject><text x="14" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">name</text></switch></g><g transform="translate(895.5,366.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="10" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="10" fill="#000000" text-anchor="middle" font-size="10px" font-family="Helvetica">1</text></switch></g><path d="M 1628 360 L 1648 360 L 1648 164 L 1636.12 164" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1629.12 164 L 1636.12 160.5 L 1636.12 167.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1628 564 L 1648 564 L 1648 106 L 1640.12 106" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1633.12 106 L 1640.12 102.5 L 1640.12 109.5 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 894 140 L 830.24 140" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 842.12 133.5 L 829.12 140 L 842.12 146.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(849.5,134.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="20" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Use</div></div></foreignObject><text x="10" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Use</text></switch></g><path d="M 845.99 924 L 1248 924 Q 1258 924 1258 914 L 1258 174 Q 1258 164 1266.88 164 L 1275.76 164" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 830.99 924 L 838.49 919.59 L 845.99 924 L 838.49 928.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1263.88 170.5 L 1276.88 164 L 1263.88 157.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(831.5,906.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 204 985.99 L 204 1020 Q 204 1030 214 1030 L 848 1030 Q 858 1030 858 1020 L 858 158 Q 858 148 868 148 L 893.76 148" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 204 970.99 L 208.41 978.49 L 204 985.99 L 199.59 978.49 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 881.88 154.5 L 894.88 148 L 881.88 141.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(208.5,955.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 228 985.99 L 228 1020 Q 228 1030 238 1030 L 848 1030 Q 858 1030 858 1020 L 858 210 Q 858 200 848 200 L 836.24 200" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 228 970.99 L 232.41 978.49 L 228 985.99 L 223.59 978.49 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 848.12 193.5 L 835.12 200 L 848.12 206.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(232.5,955.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g></g></svg>