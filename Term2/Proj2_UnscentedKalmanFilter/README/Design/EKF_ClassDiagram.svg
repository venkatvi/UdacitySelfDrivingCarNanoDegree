<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="3085px" height="1091px" version="1.1" content="&lt;mxfile userAgent=&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/604.5.6 (KHTML, like Gecko) Version/11.0.3 Safari/604.5.6&quot; version=&quot;8.4.2&quot; editor=&quot;www.draw.io&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;2be09ec3-591b-e72a-45f5-7d212b4ae1de&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs><clipPath id="mx-clip-444-883-372-74-0"><rect x="444" y="883" width="372" height="74"/></clipPath><clipPath id="mx-clip-444-965-372-112-0"><rect x="444" y="965" width="372" height="112"/></clipPath><clipPath id="mx-clip-984-877-402-104-0"><rect x="984" y="877" width="402" height="104"/></clipPath><clipPath id="mx-clip-984-989-402-82-0"><rect x="984" y="989" width="402" height="82"/></clipPath><clipPath id="mx-clip-1006-31-302-104-0"><rect x="1006" y="31" width="302" height="104"/></clipPath><clipPath id="mx-clip-1006-143-302-222-0"><rect x="1006" y="143" width="302" height="222"/></clipPath><clipPath id="mx-clip-1474-798-302-64-0"><rect x="1474" y="798" width="302" height="64"/></clipPath><clipPath id="mx-clip-1474-870-302-222-0"><rect x="1474" y="870" width="302" height="222"/></clipPath><clipPath id="mx-clip-1868-35-372-34-0"><rect x="1868" y="35" width="372" height="34"/></clipPath><clipPath id="mx-clip-1868-77-372-112-0"><rect x="1868" y="77" width="372" height="112"/></clipPath><clipPath id="mx-clip-1629-422-277-64-0"><rect x="1629" y="422" width="277" height="64"/></clipPath><clipPath id="mx-clip-1629-494-277-152-0"><rect x="1629" y="494" width="277" height="152"/></clipPath><clipPath id="mx-clip-1988-411-252-64-0"><rect x="1988" y="411" width="252" height="64"/></clipPath><clipPath id="mx-clip-1988-483-252-112-0"><rect x="1988" y="483" width="252" height="112"/></clipPath><clipPath id="mx-clip-1808-706-402-44-0"><rect x="1808" y="706" width="402" height="44"/></clipPath><clipPath id="mx-clip-1808-758-402-82-0"><rect x="1808" y="758" width="402" height="82"/></clipPath><clipPath id="mx-clip-479-562-302-54-0"><rect x="479" y="562" width="302" height="54"/></clipPath><clipPath id="mx-clip-479-624-302-112-0"><rect x="479" y="624" width="302" height="112"/></clipPath><clipPath id="mx-clip-1434-146-342-74-0"><rect x="1434" y="146" width="342" height="74"/></clipPath><clipPath id="mx-clip-1434-228-342-132-0"><rect x="1434" y="228" width="342" height="132"/></clipPath><clipPath id="mx-clip-4-64-332-64-0"><rect x="4" y="64" width="332" height="64"/></clipPath><clipPath id="mx-clip-4-136-332-142-0"><rect x="4" y="136" width="332" height="142"/></clipPath><clipPath id="mx-clip-571-31-312-64-0"><rect x="571" y="31" width="312" height="64"/></clipPath><clipPath id="mx-clip-571-103-312-142-0"><rect x="571" y="103" width="312" height="142"/></clipPath><clipPath id="mx-clip-484-417-312-24-0"><rect x="484" y="417" width="312" height="24"/></clipPath><clipPath id="mx-clip-484-449-312-62-0"><rect x="484" y="449" width="312" height="62"/></clipPath><clipPath id="mx-clip-824-421-312-34-0"><rect x="824" y="421" width="312" height="34"/></clipPath><clipPath id="mx-clip-824-463-312-82-0"><rect x="824" y="463" width="312" height="82"/></clipPath><clipPath id="mx-clip-2586-35-342-54-0"><rect x="2586" y="35" width="342" height="54"/></clipPath><clipPath id="mx-clip-2586-97-342-122-0"><rect x="2586" y="97" width="342" height="122"/></clipPath><clipPath id="mx-clip-2356-357-342-166-0"><rect x="2356" y="357" width="342" height="166"/></clipPath><clipPath id="mx-clip-2738-357-342-126-0"><rect x="2738" y="357" width="342" height="126"/></clipPath><clipPath id="mx-clip-4-336-332-24-0"><rect x="4" y="336" width="332" height="24"/></clipPath><clipPath id="mx-clip-4-368-332-82-0"><rect x="4" y="368" width="332" height="82"/></clipPath></defs><g transform="translate(0.5,0.5)"><rect x="439.5" y="852" width="380" height="220" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 439.5 878 L 439.5 852 L 819.5 852 L 819.5 878 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="628" y="869.5">SensorFusionApplication</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-444-883-372-74-0)" font-size="12px"><text x="445" y="895.5">- mExtendedKalmanFilter_: ExtendedKalmanFilter</text><text x="445" y="909.5">- mEstimations_: std::vector&lt;State&gt;</text><text x="445" y="923.5">- mGroundTruth: std::vector&lt;State&gt;</text><text x="445" y="937.5">- mCurrentRMSE_: Eigen::VectorXd</text></g><path d="M 439.5 956 L 819.5 956" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-444-965-372-112-0)" font-size="12px"><text x="445" y="977.5">+ SensorFusionApplication()</text><text x="445" y="991.5">+ ~SensorFusionApplication()</text><text x="445" y="1005.5">+ run(Measurement* currentMeasurement, </text><text x="445" y="1019.5">        GroundTruth* currentGroundtruth) : State*</text><text x="445" y="1033.5">- calculateRMSE(): Eigen::VectorXd</text><text x="445" y="1047.5">- getExtendedKalmanFilter() : ExtendedKalmanFilter&amp;</text></g><rect x="979.5" y="846" width="410" height="220" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 979.5 872 L 979.5 846 L 1389.5 846 L 1389.5 872 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1183" y="863.5">ExtendedKalmanFilter</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-984-877-402-104-0)" font-size="12px"><text x="985" y="889.5">- mKalmanFilter_: KalmanFilter</text><text x="985" y="903.5">- mIsInitialized_: bool</text><text x="985" y="917.5">- mPreviousTimestamp_ : long long</text><text x="985" y="931.5">- x_  : Eigen::VectorXd</text><text x="985" y="945.5">- P_  : Eigen::MatrixXd</text><text x="985" y="959.5">- Q_  : Eigen::MatrixXd</text><text x="985" y="973.5">- F_  : Eigen::MatrixXd</text></g><path d="M 979.5 980 L 1389.5 980" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-984-989-402-82-0)" font-size="12px"><text x="985" y="1001.5">+ ExtendedKalmanFilter()</text><text x="985" y="1015.5">+ ~ExtendedKalmanFilter()</text><text x="985" y="1029.5">+ processMeasurement(std::unique_ptr&lt;Measurement&gt; pMeasurement)</text><text x="985" y="1043.5">+ getPredictedState() const: State</text><text x="985" y="1057.5">+ computeDeltaT(long long pTimestamp): float</text></g><rect x="1002" y="0" width="310" height="360" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1002 26 L 1002 0 L 1312 0 L 1312 26 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1155.5" y="17.5">DataUtils::DataAdapter</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1006-31-302-104-0)" font-size="12px"><text x="1007.5" y="43.5">- mJSONData_ : nlohmann::son</text><text x="1007.5" y="57.5">- mDataStream_ : std::istringstream</text><text x="1007.5" y="71.5">- mMeasurement_ : std::unique_ptr&lt;Measurement&gt;</text><text x="1007.5" y="85.5">- mGroundTruth_ : std::unique_ptr&lt;State&gt;</text><text x="1007.5" y="99.5">- mIsLaser_: bool</text><text x="1007.5" y="113.5">- mDataType_:SensorDataTypes</text></g><path d="M 1002 134 L 1312 134" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1006-143-302-222-0)" font-size="12px"><text x="1007.5" y="155.5">+ DataAdapter(const nlohmann::son&amp; pJSONData)</text><text x="1007.5" y="169.5">+ ~DataAdapter()</text><text x="1007.5" y="183.5">+ isTelemetryData() const: bool</text><text x="1007.5" y="197.5">+ isLaser() const : bool</text><text x="1007.5" y="211.5">+ parseData()</text><text x="1007.5" y="225.5">+ getMeasurement() : std::unique_ptr&lt;Measurement&gt;</text><text x="1007.5" y="239.5">+ getGroundTruth() : std::unique_ptr&lt;State&gt;</text><text x="1007.5" y="253.5">+ getJSONFromPredictedState(</text><text x="1007.5" y="267.5">     const State&amp; currentPredictedState, </text><text x="1007.5" y="281.5">     const Eigen::VectorXd&amp; stateRMSE) : nlohmann::json</text><text x="1007.5" y="295.5">- parseMeasurementData()</text><text x="1007.5" y="309.5">- parseGroundTruthData()</text><text x="1007.5" y="323.5">- processLaserData() : bool</text><text x="1007.5" y="337.5">- processRadarData(): bool</text></g><rect x="1469.5" y="767" width="310" height="320" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1469.5 793 L 1469.5 767 L 1779.5 767 L 1779.5 793 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1623" y="784.5">KalmanFilter</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1474-798-302-64-0)" font-size="12px"><text x="1475" y="810.5">- x_  : Eigen::VectorXd</text><text x="1475" y="824.5">- P_  : Eigen::MatrixXd</text><text x="1475" y="838.5">- Q_  : Eigen::MatrixXd</text><text x="1475" y="852.5">- F_  : Eigen::MatrixXd</text></g><path d="M 1469.5 861 L 1779.5 861" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1474-870-302-222-0)" font-size="12px"><text x="1475" y="882.5">+ KalmanFilter()</text><text x="1475" y="896.5">+ ~KalmanFilter()</text><text x="1475" y="910.5">+ init(Eigen::MatrixXd&amp; P_, </text><text x="1475" y="924.5">         Eigen::MatrixXd&amp; Q_, </text><text x="1475" y="938.5">         Eigen::MatrixXd&amp; F_)</text><text x="1475" y="952.5">+ initState(size_t pDimensions)</text><text x="1475" y="966.5">+ setState(const State&amp; pState)</text><text x="1475" y="980.5">+ getState() const : Eigen::VectorXd&amp;</text><text x="1475" y="994.5">+ updateF(float dt) </text><text x="1475" y="1008.5">+ updateQ(float dt, float noise_ax, float noise_ay)</text><text x="1475" y="1022.5">+ predict()</text><text x="1475" y="1036.5">+ update(const Eigen::MatrixXd&amp; z, </text><text x="1475" y="1050.5">              const Eigen::MatrixXd &amp;H, </text><text x="1475" y="1064.5">              const Eigen::VectorXd&amp; Hx, </text><text x="1475" y="1078.5">              const Eigen::MatrixXd&amp; R)</text></g><rect x="1864" y="4" width="380" height="180" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1864 30 L 1864 4 L 2244 4 L 2244 30 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2052.5" y="21.5">Data::Measurement</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1868-35-372-34-0)" font-size="12px"><text x="1869.5" y="47.5">- mTimestamp_ : long long</text><text x="1869.5" y="61.5">- mStateAdapterStrategy_ : std::unique_ptr&lt;StateAdapterStrategy&gt;</text></g><path d="M 1864 68 L 2244 68" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1868-77-372-112-0)" font-size="12px"><text x="1869.5" y="89.5">+ Measurement(std::unique_ptr&lt;StateAdapterStrategy&gt; pStrategy, </text><text x="1869.5" y="103.5">                         long long pTimestamp)</text><text x="1869.5" y="117.5">+ virtual ~Measurement()</text><text x="1869.5" y="131.5">+ getTimestamp() const : long long</text><text x="1869.5" y="145.5">+ getStateAdapterStrategy() : StateAdapterStrategy*</text><text x="1869.5" y="159.5">+ virtual getStateData() const = 0 : State</text><text x="1869.5" y="173.5">+ virtual getVectorizedData() const  = 0: const Eigen::VectorXd</text></g><rect x="1624.5" y="391" width="285" height="250" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1624.5 417 L 1624.5 391 L 1909.5 391 L 1909.5 417 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1765.5" y="408.5">Data::RadarMeasurement</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1629-422-277-64-0)" font-size="12px"><text x="1630" y="434.5">- mRho_ : float</text><text x="1630" y="448.5">- mTheta_ : float</text><text x="1630" y="462.5">- mRhoDot_ : float</text><text x="1630" y="476.5">- mInputDimensions_ : std::size_t</text></g><path d="M 1624.5 485 L 1909.5 485" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1629-494-277-152-0)" font-size="12px"><text x="1630" y="506.5">+ RadarMeasurement(</text><text x="1630" y="520.5">    std::unique_ptr&lt;StateAdapterStrategy&gt; pS,</text><text x="1630" y="534.5">    long long pTimestamp, </text><text x="1630" y="548.5">    float pRho, </text><text x="1630" y="562.5">    float pTheta,</text><text x="1630" y="576.5">   float pRhoDot)</text><text x="1630" y="590.5">+ ~RadarMeasurement()</text><text x="1630" y="604.5">+ getStateData() const : State</text><text x="1630" y="618.5">+ getVectorizedData() const : const Eigen::VectorXd</text><text x="1630" y="632.5">+ getInputDimensions() const override : std::size_t</text></g><rect x="1984" y="380" width="260" height="210" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1984 406 L 1984 380 L 2244 380 L 2244 406 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2112.5" y="397.5">Data::LaserMeasurement</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1988-411-252-64-0)" font-size="12px"><text x="1989.5" y="423.5">- mPositionX_ : float</text><text x="1989.5" y="437.5">- mPositionY_ : float </text><text x="1989.5" y="451.5">- mInputDimensions_ : std:size_t</text></g><path d="M 1984 474 L 2244 474" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1988-483-252-112-0)" font-size="12px"><text x="1989.5" y="495.5">+ LaserMeasurement(</text><text x="1989.5" y="509.5">     std::unique_ptr&lt;StateAdapterStrategy&gt; pS, </text><text x="1989.5" y="523.5">     long long pTimestamp,</text><text x="1989.5" y="537.5">     float pPositionX, </text><text x="1989.5" y="551.5">     float pPositionY)</text><text x="1989.5" y="565.5">+ ~LaserMeasurement()</text><text x="1989.5" y="579.5">+ getInputDimensions() const override : size_t</text></g><rect x="1803.5" y="675" width="410" height="160" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1803.5 701 L 1803.5 675 L 2213.5 675 L 2213.5 701 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2007" y="692.5">Data::StateAdapterStrategyFactory</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1808-706-402-44-0)" font-size="12px"><text x="1809" y="718.5">- mSensorType_ : std::string</text><text x="1809" y="732.5">- mLaserStrategy_ : StateAdapterStrategy*</text><text x="1809" y="746.5">- mRadarStrategy_ : StateAdapterStrategy* </text></g><path d="M 1803.5 749 L 2213.5 749" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1808-758-402-82-0)" font-size="12px"><text x="1809" y="770.5">+ StateAdapterStrategy() </text><text x="1809" y="784.5">+ ~StateAdapterStrategy()</text><text x="1809" y="798.5">+ setSensorType(const std::string&amp; pSensorType) </text><text x="1809" y="812.5">+ getStateAdapterStrategy(const std::size_t pMeasurementDimensions):</text><text x="1809" y="826.5">     StateAdapterStrategy*</text></g><rect x="474.5" y="531" width="310" height="200" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 474.5 557 L 474.5 531 L 784.5 531 L 784.5 557 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="628" y="548.5">DataUtils::Utils</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-479-562-302-54-0)" font-size="12px"><text x="480" y="574.5">- mStartDelimiter_ : std::string</text><text x="480" y="588.5">- mEndDelimiter_ : std::string </text><text x="480" y="602.5">- mEOFDelimiter_ : std::string</text></g><path d="M 474.5 615 L 784.5 615" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-479-624-302-112-0)" font-size="12px"><text x="480" y="636.5">+ Utils( const std::string&amp; pStart,</text><text x="480" y="650.5">            const std::string&amp; pEnd,</text><text x="480" y="664.5">            const std::string&amp; pEOF)</text><text x="480" y="678.5">+ ~Utils()</text><text x="480" y="692.5">+ hasData() const : bool </text><text x="480" y="706.5">+ getData() : const std::string</text><text x="480" y="720.5">+ getDefaultString() : const std::string&amp; </text></g><rect x="1429.5" y="115" width="350" height="240" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 1429.5 141 L 1429.5 115 L 1779.5 115 L 1779.5 141 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1603" y="132.5">Data::State</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1434-146-342-74-0)" font-size="12px"><text x="1435" y="158.5">- mPositionX_ : float</text><text x="1435" y="172.5">- mPositionY_ : float</text><text x="1435" y="186.5">- mVelocityX_ : float</text><text x="1435" y="200.5">- mVelocityY_ : float</text><text x="1435" y="214.5">- mInputDimensions_ : std::size_t</text></g><path d="M 1429.5 219 L 1779.5 219" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-1434-228-342-132-0)" font-size="12px"><text x="1435" y="240.5">+ State(float px, float py, float vx, float vy)</text><text x="1435" y="254.5">+ ~State()</text><text x="1435" y="268.5">+ getPositionX() const : const float</text><text x="1435" y="282.5">+ getPositionY() const : const float</text><text x="1435" y="296.5">+ getVelocityX() const : const float</text><text x="1435" y="310.5">+ getVelocityY() const : const float</text><text x="1435" y="324.5">+ diff (const State&amp; other) : Eigen::VectorXd</text><text x="1435" y="338.5">+ static getInputDimensions() : std::size_t</text></g><rect x="0" y="33" width="340" height="240" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 0 59 L 0 33 L 340 33 L 340 59 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="168.5" y="50.5">DataUtils::InputParser</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-64-332-64-0)" font-size="12px"><text x="5.5" y="76.5">-mSource_:std::string</text><text x="5.5" y="90.5">-mOutput_:std::string</text><text x="5.5" y="104.5">-mDataType:std::string</text><text x="5.5" y="118.5">-mIsParseSuccessful:bool</text></g><path d="M 0 127 L 340 127" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-136-332-142-0)" font-size="12px"><text x="5.5" y="148.5">+InputParser(const std::string&amp; defaultSource, </text><text x="5.5" y="162.5">                     const std::string&amp; defaultOutput)</text><text x="5.5" y="176.5">+~InputParser()</text><text x="5.5" y="190.5">+parseArgs(int args, char**argv): void</text><text x="5.5" y="204.5">+getOutput() const : const std::string&amp; </text><text x="5.5" y="218.5">+getSource() const : const std::string&amp; </text><text x="5.5" y="232.5">+getDataType() const : const std::string&amp; </text><text x="5.5" y="246.5">+isParseSuccessful() const :bool</text><text x="5.5" y="260.5">-showUsage(const std::string&amp; progrramName)</text></g><rect x="567" y="0" width="320" height="240" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 567 26 L 567 0 L 887 0 L 887 26 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="725.5" y="17.5">DataUtils::DataReader</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-571-31-312-64-0)" font-size="12px"><text x="572.5" y="43.5">-mOutputFileName_:std::string</text><text x="572.5" y="57.5">-mOutputDataStream_:std::of stream</text><text x="572.5" y="71.5">-mDataAdapter_:std::unique_ptr&lt;DataAdapter&gt;</text><text x="572.5" y="85.5">-mApplication_:std::unique_ptr&lt;SesnorFusionApplication&gt;</text></g><path d="M 567 94 L 887 94" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-571-103-312-142-0)" font-size="12px"><text x="572.5" y="115.5">+ DataResder(std::unique_ptr&lt;DataAdapter&gt;,</text><text x="572.5" y="129.5">                std::unique_ptr&lt;SensorFusionApplication&gt;)</text><text x="572.5" y="143.5">+ ~DataReader()</text><text x="572.5" y="157.5">+ setOutputFile(const std::string&amp; pFileName)</text><text x="572.5" y="171.5">+ getAdapter():DataAdapter*</text><text x="572.5" y="185.5">+ getApplication():SensorFusionApplication*</text><text x="572.5" y="199.5">+ virtual run() </text><text x="572.5" y="213.5">+ processData(const std::string&amp; pData): const State*</text><text x="572.5" y="227.5">+ writeResultsToFile(const State* pState)</text></g><path d="M 902.99 92 L 999.76 92" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 887.99 92 L 895.49 87.59 L 902.99 92 L 895.49 96.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 987.88 98.5 L 1000.88 92 L 987.88 85.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(888.5,74.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><rect x="479.5" y="386" width="320" height="120" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 479.5 412 L 479.5 386 L 799.5 386 L 799.5 412 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="638" y="403.5">DataUtils::WebClientReader</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-484-417-312-24-0)" font-size="12px"><text x="485" y="429.5">-mServerHub_ :uWS::Hub</text></g><path d="M 479.5 440 L 799.5 440" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 479.5 453 L 439.5 453 Q 429.5 453 429.5 463 L 429.5 665 Q 429.5 675 439.5 675.22 L 471.76 675.95" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 459.74 682.18 L 472.88 675.97 L 460.03 669.18" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(419.5,555.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="20" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Use</div></div></foreignObject><text x="10" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Use</text></switch></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-484-449-312-62-0)" font-size="12px"><text x="485" y="461.5">+ WebClientReader(std::unique_ptr&lt;DataAdapter&gt;,</text><text x="485" y="475.5">                std::unique_ptr&lt;SensorFusionApplication&gt;)</text><text x="485" y="489.5">+ ~WebClientReader()</text><text x="485" y="503.5">+ virtual run()</text></g><rect x="819.5" y="390" width="320" height="150" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 819.5 416 L 819.5 390 L 1139.5 390 L 1139.5 416 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="978" y="407.5">DataUtils::FileReader</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-824-421-312-34-0)" font-size="12px"><text x="825" y="433.5">-mFileName_:std::string</text><text x="825" y="447.5">-mFileReader_:std::if stream</text></g><path d="M 819.5 454 L 1139.5 454" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-824-463-312-82-0)" font-size="12px"><text x="825" y="475.5">+ FileReader(std::unique_ptr&lt;DataAdapter&gt;,</text><text x="825" y="489.5">                std::unique_ptr&lt;SensorFusionApplication&gt;)</text><text x="825" y="503.5">+ ~FileReader()</text><text x="825" y="517.5">+ setSource(const std::string&amp; pFileName) </text><text x="825" y="531.5">+ virtual run()</text></g><path d="M 570 168.01 L 570 169.01 Q 570 170 560 170 L 410 170 Q 400 170 400 180 L 400 794 Q 400 804 410 804 L 620 804 Q 630 804 630 814 L 630 849.76" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 570 183.01 L 565.59 175.51 L 570 168.01 L 574.41 175.51 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 623.5 837.88 L 630 850.88 L 636.5 837.88" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(568.5,169.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 640 386 L 725.95 257.08" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 735.38 242.93 L 733.02 261.79 L 718.88 252.36 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(667.5,308.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="40" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Extends</div></div></foreignObject><text x="20" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Extends</text></switch></g><path d="M 980 390 L 784.54 244.8" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 770.9 234.67 L 789.61 237.98 L 779.48 251.63 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(855.5,306.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="40" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Extends</div></div></foreignObject><text x="20" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Extends</text></switch></g><rect x="2581.5" y="4" width="350" height="210" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 2581.5 30 L 2581.5 4 L 2931.5 4 L 2931.5 30 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2755" y="21.5">Data::StateAdapterStrategy</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2586-35-342-54-0)" font-size="12px"><text x="2587" y="47.5">- mMeasurementDimensions_ : std::size_t</text><text x="2587" y="61.5">- mH_ : Eigen::MatrixXd </text><text x="2587" y="75.5">- mR_ : Eigen::MatrixXd </text></g><path d="M 2581.5 88 L 2931.5 88" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2586-97-342-122-0)" font-size="12px"><text x="2587" y="109.5">+ StateAdapterStrategy(const std::size_t pMeasurementDims)</text><text x="2587" y="123.5">+ virtual ~StateAdapterStrategy()</text><text x="2587" y="137.5">+ virtual computeEstimatedState(const Eigen::VectorXd&amp; </text><text x="2587" y="151.5">             currentPredictedState) = 0: Eigen::MatrixXd</text><text x="2587" y="165.5">+ virtual getMeasurementFunction( const Eigen::VectorXd&amp; </text><text x="2587" y="179.5">             currentPredictedState) = 0 : Eigen::VectorXd</text><text x="2587" y="193.5">+ virtual getMeasurementCovariance() const = 0 :</text><text x="2587" y="207.5">     const Eigen::MatrixXd&amp; </text></g><rect x="2351.5" y="318" width="350" height="200" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 2351.5 344 L 2351.5 318 L 2701.5 318 L 2701.5 344 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2525" y="335.5">Data::RadarStateAdapterStrategy</text></g><path d="M 2351.5 348 L 2701.5 348" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2356-357-342-166-0)" font-size="12px"><text x="2357" y="369.5">+ RadarStateAdapterStrategy(const std::size_t pDims)</text><text x="2357" y="383.5">+ ~RadarStateAdapterStrategy()</text><text x="2357" y="397.5">+ computeEstimatedState(const Eigen::VectorXd&amp; </text><text x="2357" y="411.5">             currentPredictedState) = 0: Eigen::MatrixXd</text><text x="2357" y="425.5">+ getMeasurementFunction( const Eigen::VectorXd&amp; </text><text x="2357" y="439.5">             currentPredictedState) = 0 : Eigen::VectorXd</text><text x="2357" y="453.5">+ getMeasurementCovariance() const = 0 :</text><text x="2357" y="467.5">     const Eigen::MatrixXd&amp; </text><text x="2357" y="481.5">- calculateJacobian(const Eigen::VectorXd&amp; pState)</text><text x="2357" y="495.5">- convertCartesianToPolarCoordinates(const Eigen::VectorXd&amp; ):</text><text x="2357" y="509.5">     Eigen::VectorXd</text></g><rect x="2733.5" y="318" width="350" height="160" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 2733.5 344 L 2733.5 318 L 3083.5 318 L 3083.5 344 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="2907" y="335.5">Data::LaserStateAdapterStrategy</text></g><path d="M 2733.5 348 L 3083.5 348" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-2738-357-342-126-0)" font-size="12px"><text x="2739" y="369.5">+  LaserStateAdapterStrategy(const std::size_t pDims)</text><text x="2739" y="383.5">+ ~LaserStateAdapterStrategy()</text><text x="2739" y="397.5">+ computeEstimatedState(const Eigen::VectorXd&amp; </text><text x="2739" y="411.5">             currentPredictedState) = 0: Eigen::MatrixXd</text><text x="2739" y="425.5">+ getMeasurementFunction( const Eigen::VectorXd&amp; </text><text x="2739" y="439.5">             currentPredictedState) = 0 : Eigen::VectorXd</text><text x="2739" y="453.5">+ getMeasurementCovariance() const = 0 :</text><text x="2739" y="467.5">     const Eigen::MatrixXd&amp; </text></g><path d="M 2526 318 L 2701.86 228.24" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2717 220.51 L 2705.73 235.81 L 2698 220.67 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2601.5,262.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="40" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Extends</div></div></foreignObject><text x="20" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Extends</text></switch></g><path d="M 2908 318 L 2777.04 230.1" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2762.93 220.62 L 2781.78 223.04 L 2772.31 237.16 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2814.5,262.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="40" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Extends</div></div></foreignObject><text x="20" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Extends</text></switch></g><path d="M 1200 368 L 1199.51 743 Q 1199.5 753 1209.5 753.02 L 1801.76 754" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1789.87 760.48 L 1802.88 754 L 1789.89 747.48" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(1297.5,747.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="20" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Use</div></div></foreignObject><text x="10" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Use</text></switch></g><path d="M 2229.99 724 L 2264 724 Q 2274 724 2274 714 L 2274 446 Q 2274 436 2284 436 L 2349.76 436" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2214.99 724 L 2222.49 719.59 L 2229.99 724 L 2222.49 728.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2337.88 442.5 L 2350.88 436 L 2337.88 429.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2215.5,706.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 2214 809.99 L 2214 802.99 Q 2214 796 2224 796 L 2294 796 Q 2304 796 2304 786 L 2304 734 Q 2304 724 2314 724 L 2878 724 Q 2888 724 2888 714 L 2888 484.24" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2214 794.99 L 2218.41 802.49 L 2214 809.99 L 2209.59 802.49 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2894.5 496.12 L 2888 483.12 L 2881.5 496.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2218.5,779.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 1768 392 L 2013.91 193.38" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2027.13 182.7 L 2019.25 200 L 2008.56 186.77 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(1878.5,280.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="40" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Extends</div></div></foreignObject><text x="20" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Extends</text></switch></g><path d="M 2114 380 L 2040.97 204.72" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2034.43 189.03 L 2048.81 201.46 L 2033.12 207.99 Z" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2053.5,278.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="40" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Extends</div></div></foreignObject><text x="20" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Extends</text></switch></g><path d="M 2255.99 74 L 2400 74 Q 2410 74 2410 66 L 2410 62 Q 2410 58 2420 58 L 2579.76 58" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2240.99 74 L 2248.49 69.59 L 2255.99 74 L 2248.49 78.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 2567.88 64.5 L 2580.88 58 L 2567.88 51.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2241.5,56.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 1327.99 78 L 1578 78 Q 1588 78 1588 68 L 1588 58 Q 1588 48 1598 48 L 1861.76 48" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1312.99 78 L 1320.49 73.59 L 1327.99 78 L 1320.49 82.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1849.88 54.5 L 1862.88 48 L 1849.88 41.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(1313.5,60.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 1327.99 249 L 1427.26 249" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1312.99 249 L 1320.49 244.59 L 1327.99 249 L 1320.49 253.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1415.38 255.5 L 1428.38 249 L 1415.38 242.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(1313.5,231.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 1866 116 L 1829.5 115.22 Q 1819.5 115 1819.5 125 L 1819.5 279 Q 1819.5 289 1809.5 289.25 L 1782.24 289.94" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1793.95 283.14 L 1781.12 289.97 L 1794.28 296.14" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(1809.5,192.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="20" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap; text-align: center;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">Use</div></div></foreignObject><text x="10" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">Use</text></switch></g><path d="M 837.99 976 L 920 976 Q 930 976 930 966 L 930 924 Q 930 914 940 914 L 972 914 Q 982 914 982 914.12 L 982 914.24" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 822.99 976 L 830.49 971.59 L 837.99 976 L 830.49 980.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 988.5 926.12 L 982 913.12 L 975.5 926.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(823.5,958.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><path d="M 835.99 916 L 900 916 Q 910 916 910 906 L 910 794 Q 910 784 920 784 L 1360 784 Q 1370 784 1370 774 L 1370 300 Q 1370 290 1380 290 L 1427.76 290" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 820.99 916 L 828.49 911.59 L 835.99 916 L 828.49 920.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1415.88 296.5 L 1428.88 290 L 1415.88 283.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(821.5,898.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">n</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">n</text></switch></g><path d="M 1409.99 988 L 1420 988 Q 1430 988 1430 978 L 1430 836 Q 1430 826 1440 826 L 1467.76 826" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1394.99 988 L 1402.49 983.59 L 1409.99 988 L 1402.49 992.41 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455.88 832.5 L 1468.88 826 L 1455.88 819.5" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(1395.5,970.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="6" height="11" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; white-space: nowrap;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;">1</div></div></foreignObject><text x="3" y="11" fill="#000000" text-anchor="middle" font-size="11px" font-family="Helvetica">1</text></switch></g><rect x="0" y="305" width="340" height="140" fill="#ffffff" stroke="#000000" pointer-events="none"/><path d="M 0 331 L 0 305 L 340 305 L 340 331 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="168.5" y="322.5">DataUtils::DataReaderFactory</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-336-332-24-0)" font-size="12px"><text x="5.5" y="348.5">-mDataSource_: std::string</text></g><path d="M 0 359 L 340 359" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-4-368-332-82-0)" font-size="12px"><text x="5.5" y="380.5">+DataReaderFactory()</text><text x="5.5" y="394.5">+~DataReaderFactory()</text><text x="5.5" y="408.5">+ setSource(const std::string&amp; pString)</text><text x="5.5" y="422.5">+ getDataReader(std::unique_ptr&lt;DataAdapter&gt;, </text><text x="5.5" y="436.5">             std::unique_ptr&lt;SensorFusionApplication&gt;)</text></g></g></svg>